/*%FSM<COMPILE "S:\steam\steamapps\common\Arma 3 Tools\FSMEditor\scriptedFSM.cfg, main">*/
/*%FSM<HEAD>*/
/*
item0[] = {"start",0,250,-612.778992,-382.775513,-558.898926,-348.829071,0.000000,"start"};
item1[] = {"_",8,218,-499.472504,-381.746887,-452.281677,-351.144928,0.000000,""};
item2[] = {"healthy",2,250,176.483063,-393.754578,274.603149,-337.994476,0.000000,"healthy"};
item3[] = {"fall_in_agony",4,218,37.045509,-347.231659,127.045647,-297.231659,0.000000,"fall in agony"};
item4[] = {"agony",2,250,-123.965309,-24.655529,-22.604576,41.624901,0.000000,"agony"};
item5[] = {"dead",4,218,174.369385,-23.462677,279.038147,41.518860,100.000000,"dead"};
item6[] = {"aborded",4,218,-243.500366,260.854919,-175.108643,295.938629,2.000000,"aborded"};
item7[] = {"died",2,4346,311.848206,-6.263855,378.181213,26.329773,0.000000,"died"};
item8[] = {"still_there",4,218,308.512573,-134.117706,380.744202,-84.537109,0.000000,"still there"};
item9[] = {"dragged",4,218,218.224716,121.383217,271.909821,156.019226,7.000000,"dragged"};
item10[] = {"dragAnim",2,250,211.853806,216.571564,277.411346,244.224091,0.000000,"dragAnim"};
item11[] = {"released",4,218,84.938087,295.128540,164.663818,332.259766,1.000000,"released"};
item12[] = {"healed",4,218,-393.788635,102.519173,-340.103485,137.155258,4.000000,"healed"};
item13[] = {"carried",4,218,-27.164322,88.637253,26.520790,123.273247,6.000000,"carried"};
item14[] = {"healAnim",2,250,-395.747894,213.880890,-336.773926,243.727844,0.000000,"healAnim"};
item15[] = {"dead",4,218,-395.186584,271.604156,-337.970428,312.041260,100.000000,"dead"};
item16[] = {"dead",4,218,-160.881470,282.314178,-103.665314,322.751282,100.000000,"dead"};
item17[] = {"",7,210,341.127197,452.867188,349.127197,460.867218,0.000000,""};
item18[] = {"agonyStart",2,250,34.616989,-254.625839,128.408234,-226.973312,0.000000,"agonyStart"};
item19[] = {"helpAnim",2,250,-165.316299,222.405670,-99.758766,250.058197,0.000000,"helpAnim"};
item20[] = {"finshed",4,218,-509.660919,211.494629,-441.269165,246.578339,1.000000,"finshed"};
item21[] = {"dummy",2,250,-128.594116,-312.624390,-72.684509,-283.013733,0.000000,"dummy"};
item22[] = {"noVeh",4,218,-58.701172,-260.710907,2.878456,-221.104309,10.000000,"noVeh"};
item23[] = {"unloadAnim",2,250,-138.227722,-190.014008,-63.050720,-160.403351,0.000000,"unloadAnim"};
item24[] = {"waitRespawn",2,250,295.065308,-456.733276,392.030762,-426.133759,0.000000,"waitRespawn"};
item25[] = {"alive_again",4,218,308.963318,-535.101379,378.275696,-482.961426,0.000000,"alive" \n "again"};
item26[] = {"disconnected",4,218,392.137939,-15.117661,506.580566,31.510925,1.000000,"disconnected"};
item27[] = {"exit",1,250,427.189209,-581.186462,472.247192,-546.167419,0.000000,"exit"};
item28[] = {"setEntity",2,250,195.071350,-522.039734,257.661133,-498.688782,0.000000,"setEntity"};
item29[] = {"healAborded",2,250,-246.357178,183.063141,-171.838409,212.910095,0.000000,"healAborded"};
item30[] = {"_",8,218,-123.592499,-243.430542,-76.401825,-212.828613,0.000000,""};
item31[] = {"allowDamage",2,250,-447.308411,-91.307732,-351.609222,-62.071075,0.000000,"allowDamage"};
item32[] = {"has_moved",4,218,-439.910706,43.573929,-359.842865,86.750458,8.000000,"has moved"};
item33[] = {"carryAnim",2,250,-32.776443,215.860382,32.781090,243.512909,0.000000,"carryAnim"};
item34[] = {"helped",4,218,-158.957291,143.883224,-105.272179,178.519226,5.000000,"helped"};
item35[] = {"dead",4,218,-27.517517,286.417084,29.698639,326.854187,100.000000,"dead"};
item36[] = {"dead",4,218,215.619690,277.064911,272.835846,317.502014,100.000000,"dead"};
item37[] = {"releaseAnim",2,250,83.995102,168.827606,165.436188,196.480133,0.000000,"releaseAnim"};
item38[] = {"_",8,218,101.558319,113.964897,148.748993,144.566833,0.000000,""};
item39[] = {"LandAnim",2,250,-287.419434,-154.481628,-206.596710,-127.677193,0.000000,"LandAnim"};
item40[] = {"_",8,218,-181.394684,-92.794922,-134.204010,-62.192993,0.000000,""};
item41[] = {"HealFinish",2,250,-514.396362,142.309082,-435.504303,170.660980,0.000000,"HealFinish"};
item42[] = {"_",8,218,-232.513489,122.909050,-185.322662,153.510986,0.000000,""};
item43[] = {"aborded",4,218,-104.378807,260.042786,-35.987091,295.126495,1.000000,"aborded"};
item44[] = {"helpAborded",2,250,-107.272186,182.245087,-32.753418,212.092041,0.000000,"helpAborded"};
item45[] = {"_",8,218,-93.471130,118.042603,-46.280304,148.644531,0.000000,""};
item46[] = {"healCanceled",2,250,-409.321503,337.182953,-322.530518,367.848083,0.000000,"healCanceled"};
item47[] = {"helpCanceled",2,250,-175.625244,348.008087,-88.834259,378.673218,0.000000,"helpCanceled"};
item48[] = {"carryCanceled",2,250,-41.567169,350.765411,45.223816,381.430542,0.000000,"carryCanceled"};
item49[] = {"dragCanceled",2,250,200.931946,347.735077,287.722931,378.400208,0.000000,"dragCanceled"};
item50[] = {"vehHealed",4,218,-338.443512,125.723633,-251.887299,165.416794,3.000000,"vehHealed"};
item51[] = {"unloaded",4,218,-141.299713,-130.410049,-61.231873,-87.233521,3.000000,"unloaded"};
item52[] = {"VehAnim",2,250,48.853752,-121.756561,114.411293,-94.104034,0.000000,"VehAnim"};
item53[] = {"_",8,218,-70.612701,443.984406,-23.421997,474.586334,0.000000,""};
item54[] = {"onLand",4,218,-291.392090,-214.234711,-201.109467,-168.757568,11.000000,"onLand"};
item55[] = {"inVeh",4,218,37.635437,-192.399475,126.364471,-156.296051,10.000000,"inVeh"};
item56[] = {"found",4,218,190.346344,-473.349335,263.466217,-429.775452,0.000000,"found"};
item57[] = {"Not_found",4,218,184.983063,-585.954590,266.669739,-540.477051,0.000000,"Not found"};
item58[] = {"inWater",4,218,-409.430420,-214.249054,-319.147797,-168.771912,12.000000,"inWater"};
item59[] = {"WaterAnim",2,250,-402.747894,-149.528931,-326.165497,-121.028320,0.000000,"WaterAnim"};
item60[] = {"has_shot",4,218,-325.217529,-12.482407,-245.149689,30.694122,9.000000,"has shot"};
item61[] = {"notCaptive",2,250,-332.681122,-66.022301,-236.981934,-36.785645,0.000000,"notCaptive"};
item62[] = {"aborded",4,218,46.650429,208.903076,113.764648,248.829224,2.000000,"aborded"};
item63[] = {"carryFall",2,250,14.584763,153.803741,80.142303,181.456268,0.000000,"carryFall"};
item64[] = {"aborded",4,218,130.057159,209.738831,195.571106,249.640930,2.000000,"aborded"};
item65[] = {"dragFall",2,250,168.405197,153.803619,225.602875,178.112274,0.000000,"dragFall"};
item66[] = {"inTheAir",4,218,-88.255188,-360.572083,-8.422668,-326.053131,2.000000,"inTheAir"};
item67[] = {"giveChute",2,250,-225.593384,-360.446503,-151.074402,-325.666504,0.000000,"giveChute"};
item68[] = {"onTheGround",4,218,-361.399567,-317.658386,-250.157928,-278.152771,1.000000,"onTheGround"};
item69[] = {"dummy_1",2,250,-333.528656,-260.952850,-277.619049,-231.342194,0.000000,"dummy"};
item70[] = {"_",8,218,58.571442,-66.521301,105.762123,-35.919373,0.000000,""};
item71[] = {"loaded",4,218,-46.440247,-126.715363,18.642494,-88.860413,10.000000,"loaded"};
link0[] = {0,1};
link1[] = {1,2};
link2[] = {2,3};
link3[] = {2,5};
link4[] = {3,18};
link5[] = {4,5};
link6[] = {4,9};
link7[] = {4,12};
link8[] = {4,13};
link9[] = {4,32};
link10[] = {4,34};
link11[] = {4,50};
link12[] = {4,51};
link13[] = {4,60};
link14[] = {4,71};
link15[] = {5,7};
link16[] = {6,29};
link17[] = {7,8};
link18[] = {7,26};
link19[] = {8,24};
link20[] = {9,10};
link21[] = {10,11};
link22[] = {10,36};
link23[] = {10,64};
link24[] = {11,37};
link25[] = {12,14};
link26[] = {13,33};
link27[] = {14,6};
link28[] = {14,15};
link29[] = {14,20};
link30[] = {15,46};
link31[] = {16,47};
link32[] = {17,7};
link33[] = {18,22};
link34[] = {18,55};
link35[] = {19,16};
link36[] = {19,43};
link37[] = {20,41};
link38[] = {21,66};
link39[] = {21,68};
link40[] = {22,21};
link41[] = {23,30};
link42[] = {24,25};
link43[] = {25,28};
link44[] = {26,27};
link45[] = {28,56};
link46[] = {28,57};
link47[] = {29,42};
link48[] = {30,21};
link49[] = {31,40};
link50[] = {32,31};
link51[] = {33,11};
link52[] = {33,35};
link53[] = {33,62};
link54[] = {34,19};
link55[] = {35,48};
link56[] = {36,49};
link57[] = {37,38};
link58[] = {38,4};
link59[] = {39,40};
link60[] = {40,4};
link61[] = {41,1};
link62[] = {42,4};
link63[] = {43,44};
link64[] = {44,45};
link65[] = {45,4};
link66[] = {46,53};
link67[] = {47,53};
link68[] = {48,53};
link69[] = {49,53};
link70[] = {50,14};
link71[] = {51,23};
link72[] = {52,70};
link73[] = {53,17};
link74[] = {54,39};
link75[] = {55,52};
link76[] = {56,2};
link77[] = {57,27};
link78[] = {58,59};
link79[] = {59,40};
link80[] = {60,61};
link81[] = {61,40};
link82[] = {62,63};
link83[] = {63,38};
link84[] = {64,65};
link85[] = {65,38};
link86[] = {66,67};
link87[] = {67,68};
link88[] = {68,69};
link89[] = {69,54};
link90[] = {69,58};
link91[] = {70,4};
link92[] = {71,52};
globals[] = {0.000000,0,0,0,0,640,480,1,160,6316128,1,-960.824158,594.585693,523.031921,-686.437805,1767,1374,1};
window[] = {0,-1,-1,-32000,-32000,2123,156,3658,577,1,1785};
*//*%FSM</HEAD>*/
class FSM
{
        fsmName = "main";
        class States
        {
                /*%FSM<STATE "start">*/
                class start
                {
                        name = "start";
                        itemno = 0;
                        init = /*%FSM<STATEINIT""">*/"_unit = _this;" \n
                         "_uid = getPlayerUID _unit;" \n
                         "" \n
                         "_noTFAR = [false, true] select ([""reviveNoTFAR""] call core_fnc_getParam);" \n
                         "" \n
                         "_inVeh = objNull;" \n
                         "_medEvac = objNull;" \n
                         "_defibrilator = objNull;" \n
                         "" \n
                         "_lockTime = 0;" \n
                         "_preAnim = """";" \n
                         "" \n
                         "_hasMoved = false;" \n
                         "_hasShot = false;" \n
                         "" \n
                         "_actionCarry = -1;" \n
                         "_actionDrag = -1;" \n
                         "_actionDrop = -1;" \n
                         "_actionHeal = -1;" \n
                         "_actionHelp = -1;" \n
                         "_actionLoad = -1;" \n
                         "_actionVehHeal = -1;" \n
                         "" \n
                         "_dragAnimThread = scriptNull;" \n
                         "_carryAnimThread = scriptNull;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 1;
                                        priority = 0.000000;
                                        to="healthy";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "healthy">*/
                class healthy
                {
                        name = "healthy";
                        itemno = 2;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM healthy block: %1 --- %2"", _unit, time];"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "dead">*/
                                class dead
                                {
                                        itemno = 5;
                                        priority = 100.000000;
                                        to="died";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(alive _unit) || (isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "fall_in_agony">*/
                                class fall_in_agony
                                {
                                        itemno = 3;
                                        priority = 0.000000;
                                        to="agonyStart";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_unit getVariable [""agony"", false])"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "agony">*/
                class agony
                {
                        name = "agony";
                        itemno = 4;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM agony block: %1 --- %2"", _unit, time];" \n
                         "" \n
                         "if !( _unit isEqualTo player ) exitWith {};" \n
                         "" \n
                         "if ( userInputDisabled ) then { " \n
                         "	_lockTime spawn {" \n
                         "		sleep _this;" \n
                         "		disableUserInput false;	" \n
                         "	};" \n
                         "	_lockTime = 0; " \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "dead">*/
                                class dead
                                {
                                        itemno = 5;
                                        priority = 100.000000;
                                        to="died";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(alive _unit) || (isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "loaded">*/
                                class loaded
                                {
                                        itemno = 71;
                                        priority = 10.000000;
                                        to="VehAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"( !(isNull(_unit getVariable [""inVeh"", objNull])) && (isNull _inVeh) )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "has_shot">*/
                                class has_shot
                                {
                                        itemno = 60;
                                        priority = 9.000000;
                                        to="notCaptive";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"if !( _hasMoved ) exitWith { false }; " \n
                                         "if ( _hasShot ) exitWith { false }; " \n
                                         "(_unit getVariable [""hasShot"", false])"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "has_moved">*/
                                class has_moved
                                {
                                        itemno = 32;
                                        priority = 8.000000;
                                        to="allowDamage";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"if ( _hasMoved ) exitWith { false }; " \n
                                         "(getPos _unit) params [""_x"", ""_y""];" \n
                                         "( !(surfaceIsWater [_x, _y]) && (_unit getVariable [""hasMoved"", false]) )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "dragged">*/
                                class dragged
                                {
                                        itemno = 9;
                                        priority = 7.000000;
                                        to="dragAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!( isNull (_unit getVariable [""dragger"", objNull]) )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "carried">*/
                                class carried
                                {
                                        itemno = 13;
                                        priority = 6.000000;
                                        to="carryAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!( isNull (_unit getVariable [""carrier"", objNull]) )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "helped">*/
                                class helped
                                {
                                        itemno = 34;
                                        priority = 5.000000;
                                        to="helpAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!( _unit getVariable [""helper"", []] isEqualTo [] )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "healed">*/
                                class healed
                                {
                                        itemno = 12;
                                        priority = 4.000000;
                                        to="healAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"( !(_unit getVariable [""healer"", []] isEqualTo []) && (isNull (_unit getVariable [""medEvac"", objNull])) )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "vehHealed">*/
                                class vehHealed
                                {
                                        itemno = 50;
                                        priority = 3.000000;
                                        to="healAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"( !(_unit getVariable [""healer"", []] isEqualTo []) && !(isNull (_unit getVariable [""medEvac"", objNull])) )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "unloaded">*/
                                class unloaded
                                {
                                        itemno = 51;
                                        priority = 3.000000;
                                        to="unloadAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"( ((isNull(_unit getVariable [""inVeh"", objNull])) && !(isNull _inVeh)) || (!(alive _inVeh) && !(isNull _inVeh)) )" \n
                                         "" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "died">*/
                class died
                {
                        name = "died";
                        itemno = 7;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format [""FSM died block: %1"", _unit];" \n
                         "" \n
                         "if ( isNull _unit ) exitWith {};" \n
                         "" \n
                         "_hitPoints = _unit getVariable ""hitPoints"";" \n
                         "{ _unit setHitIndex [_forEachIndex, 0] } forEach _hitPoints;" \n
                         "" \n
                         "if (_unit isEqualTo player) exitWith {" \n
                         "	diag_log ""FSM died block: player is wounded"";" \n
                         "	[player] call revive_fnc_stopBleeding;" \n
                         "	player setVariable [""agony"", false, true];" \n
                         "	player setVariable [""hasMoved"", false, true];" \n
                         "	player setVariable [""hasShot"", false, true];" \n
                         "	player setVariable [""tf_unable_to_use_radio"", false];" \n
                         "	if !( isNil ""reviveKeyEH"" ) then {" \n
                         "		(findDisplay 46) displayRemoveEventHandler [""keyDown"", reviveKeyEH];" \n
                         "		reviveKeyEH = nil;" \n
                         "	};" \n
                         "	if !( isNil ""reviveShotEH"" ) then {" \n
                         "		player removeEventHandler [""FiredMan"", reviveShotEH];" \n
                         "		reviveShotEH = nil;" \n
                         "	};" \n
                         "	showHud true;" \n
                         "	disableUserInput false; " \n
                         "};" \n
                         "" \n
                         "if !( CTXT_PLAYER ) exitWith {};" \n
                         "" \n
                         "_unit removeAction _actionHeal;" \n
                         "_unit removeAction _actionVehHeal;" \n
                         "_unit removeAction _actionDrag;" \n
                         "_unit removeAction _actionCarry;" \n
                         "_unit removeAction _actionDrop;" \n
                         "_unit removeAction _actionHelp;" \n
                         "_actionHeal = -1;" \n
                         "_actionVehHeal = -1;" \n
                         "_actionDrag = -1;" \n
                         "_actionCarry = -1;" \n
                         "_actionDrop = -1;" \n
                         "_actionHelp = -1;" \n
                         "" \n
                         "private _vName = format[""unload_%1"", (owner _unit)];" \n
                         "{" \n
                         "	private _action = _x getVariable _vName;" \n
                         "	if !( isNil ""_action"" ) then {" \n
                         "		_x removeAction _action;" \n
                         "		_x setVariable [_vName, nil];" \n
                         "	};" \n
                         "} count vehicles;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "disconnected">*/
                                class disconnected
                                {
                                        itemno = 26;
                                        priority = 1.000000;
                                        to="exit";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "still_there">*/
                                class still_there
                                {
                                        itemno = 8;
                                        priority = 0.000000;
                                        to="waitRespawn";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "dragAnim">*/
                class dragAnim
                {
                        name = "dragAnim";
                        itemno = 10;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "private _dragger = _unit getVariable ""dragger"";" \n
                         "" \n
                         "diag_log format [""FSM dragAnim block: wounded: %1 --- dragger: %2"", _unit, _dragger];" \n
                         "" \n
                         "if ( _dragger isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM dragAnim block: player is dragger"";" \n
                         "	_preAnim = animationState player;" \n
                         "	[player, ""grabDrag""] call common_fnc_doGesture;" \n
                         "	_unit setDir (getDir player + 180);" \n
                         "	private _action = [""revive"", ""actions"", ""drop""] call core_fnc_getSetting;" \n
                         "	_actionDrop = player addAction [format[_action, (name _unit)], {_this call revive_fnc_actionDrop}, _unit, 0, false, true];" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM dragAnim block: player is wounded"";" \n
                         "	[player, ""AinjPpneMrunSnonWnonDb_grab"", 2] call common_fnc_doAnim; //1s" \n
                         "	player attachTo [_dragger,  [0, 1.1, 0.092]];" \n
                         "	[player, 180] call common_fnc_setDir;" \n
                         "	_dragAnimThread = _dragger spawn {" \n
                         "		private _dragger = _this;" \n
                         "		sleep 1;" \n
                         "		while { !(isNull _dragger) } do {" \n
                         "			if ( (speed _dragger) > 0 ) then {" \n
                         "				[player, ""AinjPpneMrunSnonWnonDb"", 0] call common_fnc_doAnim;" \n
                         "			} else {" \n
                         "				[player, ""AinjPpneMrunSnonWnonDb_still"", 0] call common_fnc_doAnim;" \n
                         "			};" \n
                         "			sleep 2;" \n
                         "			_dragger = _unit getVariable [""dragger"", objNull];" \n
                         "		};" \n
                         "	};" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "dead">*/
                                class dead
                                {
                                        itemno = 36;
                                        priority = 100.000000;
                                        to="dragCanceled";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(alive _unit) || (isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "aborded">*/
                                class aborded
                                {
                                        itemno = 64;
                                        priority = 2.000000;
                                        to="dragFall";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private _dragger = _unit getVariable [""dragger"", objNull];" \n
                                         "(	isNull(_dragger) || !(alive _dragger) || (_dragger getVariable [""agony"", false]) )" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "released">*/
                                class released
                                {
                                        itemno = 11;
                                        priority = 1.000000;
                                        to="releaseAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"( !(isNull(_unit getVariable [""droper"", objNull])) )/* && " \n
                                         "	({ !(alive (_unit getVariable _x)) } count [""dragger"", ""carrier""] == 0) &&" \n
                                         "	({ (_unit getVariable _x) getVariable [""agony"", false] } count [""dragger"", ""carrier""] == 0) )*/" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "healAnim">*/
                class healAnim
                {
                        name = "healAnim";
                        itemno = 14;
                        init = /*%FSM<STATEINIT""">*/"private _healer = _unit getVariable ""healer"";" \n
                         "" \n
                         "diag_log format [""FSM healAnim block: %1 --- %2"", _unit, _healer];" \n
                         "" \n
                         "if ( !CTXT_PLAYER ) exitWith {};" \n
                         "" \n
                         "if ( _healer isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healAnim block: player is healer"";" \n
                         "	player selectWeapon (primaryWeapon player);" \n
                         "	sleep 1;" \n
                         "	[player, ""medicStart""] call common_fnc_doGesture;" \n
                         "	reviveAnimDelay = time + 2;" \n
                         "	private _animEH = player addEventhandler [""AnimChanged"", {_this call revive_fnc_healAnimEH} ];" \n
                         "	player setVariable [""healAnimEH"", _animEH];" \n
                         "	private _offset = [0,0,0]; " \n
                         "	private _dir = 0;" \n
                         "	private _relpos = _healer worldToModel position _unit;" \n
                         "	if( (_relpos select 0) < 0 ) then {" \n
                         "		_offset = [-0.2,0.7,0];" \n
                         "		_dir = 90;" \n
                         "	} else {" \n
                         "		_offset = [0.2,0.7,0];" \n
                         "		_dir = 270;" \n
                         "	};" \n
                         "	_unit attachTo [player, _offset];" \n
                         "	[_unit, _dir] call common_fnc_setDir;" \n
                         "	_unit spawn revive_fnc_doHeal;	" \n
                         "	if !( isNull (_unit getVariable [""medEvac"", objNull]) ) then {" \n
                         "		_medEvac = _unit getVariable ""medEvac"";" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healAnim block: player is wounded"";" \n
                         "	[player, ""AinjPpneMstpSnonWrflDnon_rolltoback""] call common_fnc_doAnim;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "dead">*/
                                class dead
                                {
                                        itemno = 15;
                                        priority = 100.000000;
                                        to="healCanceled";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(alive _unit) || (isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "aborded">*/
                                class aborded
                                {
                                        itemno = 6;
                                        priority = 2.000000;
                                        to="healAborded";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private _healer = _unit getVariable ""healer"";" \n
                                         "( !(alive _healer) || ((_healer distance _unit) > 2) || (_healer getVariable ""agony"") || (_healer getVariable ""stopped"") )" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "finshed">*/
                                class finshed
                                {
                                        itemno = 20;
                                        priority = 1.000000;
                                        to="HealFinish";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private _healer = _unit getVariable ""healer"";" \n
                                         "" \n
                                         "(_healer getVariable [""finished"", false])"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "agonyStart">*/
                class agonyStart
                {
                        name = "agonyStart";
                        itemno = 18;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM agonyStart block: %1"", _unit];" \n
                         "" \n
                         "_hitPoints = _unit getVariable ""hitPoints"";" \n
                         "{ _unit setHitIndex [_forEachIndex, 0] } forEach _hitPoints;" \n
                         "_unit setDamage 0;" \n
                         "_unit allowDamage false;" \n
                         "_unit setCaptive true;" \n
                         "" \n
                         "if ( player isEqualTo _unit ) exitWith {" \n
                         "	diag_log ""FSM agonyStart block: player is wounded"";" \n
                         "	player switchCamera ""INTERNAL"";" \n
                         "	showHud false;" \n
                         "	disableUserInput true;" \n
                         "	[] spawn {" \n
                         "		reviveKeyEH = (findDisplay 46) displayAddEventHandler [""KeyDown"", {_this call revive_fnc_keyUnbind}];" \n
                         "		reviveShotEH = player addEventHandler [""FiredMan"", {player setVariable [""hasShot"", true, true]}];" \n
                         "	};" \n
                         "	player setVariable [""tf_unable_to_use_radio"", _noTFAR];" \n
                         "	execFSM (""feats\revive\fsm\bleedOut.fsm"");" \n
                         "	private _unitMode = [""revive"", ""agony"", ""unitMode""] call core_fnc_getSetting;" \n
                         "	if ( _unitMode > 0 ) then {" \n
                         "		private _msg = [""revive"", ""agony"", ""unitMsg""] call core_fnc_getSetting;" \n
                         "		if ( _unitMode isEqualTo 1 ) then {" \n
                         "			[_unitMode, format[_msg, (name player), (mapGridPosition player)], [""HQ"", PLAYER_SIDE]] call global_fnc_chat;" \n
                         "		};" \n
                         "		if ( _unitMode isEqualTo 2 ) then {" \n
                         "			[_unitMode, format[_msg, (name player), (mapGridPosition player)], player] call global_fnc_chat;" \n
                         "		};" \n
                         "" \n
                         "	};" \n
                         "	private _group = group player;" \n
                         "	private _squadMode = [""revive"", ""agony"", ""squadMode""] call core_fnc_getSetting;" \n
                         "	private _wiped = false;" \n
                         "	if ( _squadMode > 0 ) then {" \n
                         "		if ( { !( _x getVariable [""agony"", false] ) } count (units _group) == 0 ) then {" \n
                         "			_wiped = true;" \n
                         "			private _msg = [""revive"", ""agony"", ""squadMsg""] call core_fnc_getSetting;" \n
                         "			[1, format[_msg, (groupID _group)], [""HQ"", PLAYER_SIDE]] call global_fnc_chat;" \n
                         "		};" \n
                         "	};" \n
                         "	if (  ([""revive"", ""agony"", ""changeLeader""] call core_fnc_getSetting) isEqualTo 1 ) then {" \n
                         "		private _isTL = ( player isEqualto (leader _group) );" \n
                         "		player setVariable[""leader"", _isTL];" \n
                         "		if ( _isTL && !_wiped ) then {" \n
                         "			private _up = [];" \n
                         "			{" \n
                         "				if  !( _x getVariable [""agony"", false] ) then { _up pushback _x; };" \n
                         "			} forEach ( (units _group) - [player]);" \n
                         "			//TODO pick the most ranked" \n
                         "			//use (rank _unit) for non TFU => ""PRIVATE"", ""CORPORAL"", ""SERGEANT"", ""LIEUTENANT"", ""CAPTAIN"", ""MAJOR"", ""COLONEL"" " \n
                         "			//later use TFU rank" \n
                         "			private _newTL = (selectRandom _up);" \n
                         "			(group player) selectLeader _newTL;" \n
                         "			private _leadMode = [""revive"", ""agony"", ""leadMode""] call core_fnc_getSetting;" \n
                         "			if ( _leadMode > 0 ) then {" \n
                         "				private _msg = [""revive"", ""agony"", ""leadMsg""] call core_fnc_getSetting;" \n
                         "				if ( _leadMode isEqualTo 1 ) then {" \n
                         "					[_leadMode, format[_msg, (name _newTL)], [""HQ"", PLAYER_SIDE]] call global_fnc_chat;" \n
                         "				};" \n
                         "				if ( _leadMode isEqualTo 2 ) then {" \n
                         "					[_leadMode, format[_msg, (name _newTL)], player] call global_fnc_chat;" \n
                         "				};" \n
                         "" \n
                         "			};" \n
                         "		};" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "if ( !CTXT_PLAYER )  exitWith {};" \n
                         "" \n
                         "private [""_cond"", ""_action""];" \n
                         "if ( (player getVariable ""role"") isEqualTo ""medic"" ) then {" \n
                         "	_cond = ""['heal', _target] call revive_fnc_actionCondition"";" \n
                         "	_action = [""revive"", ""actions"", ""heal""] call core_fnc_getSetting;" \n
                         "	_actionHeal = _unit addAction [format[_action, (name _unit)], {_this call revive_fnc_actionHeal}, """", 100, false, true, """", _cond];" \n
                         "};" \n
                         "" \n
                         "_cond = ""['vehHeal', _target] call revive_fnc_actionCondition"";" \n
                         "_action = [""revive"", ""actions"", ""vehHeal""] call core_fnc_getSetting;" \n
                         "_actionVehHeal = _unit addAction [format[_action, (name _unit)], {_this call revive_fnc_actionVehHeal}, """", 99, false, true, """", _cond];" \n
                         "" \n
                         "_cond = ""['drag', _target] call revive_fnc_actionCondition"";" \n
                         "_action = [""revive"", ""actions"", ""drag""] call core_fnc_getSetting;" \n
                         "_actionDrag = _unit addAction [format[_action, (name _unit)], {_this call revive_fnc_actionDrag}, """", 99, false, true, """", _cond];" \n
                         "" \n
                         "_cond = ""['carry', _target] call revive_fnc_actionCondition"";" \n
                         "_action = [""revive"", ""actions"", ""carry""] call core_fnc_getSetting;" \n
                         "_actionCarry = _unit addAction [format[_action, (name _unit)], {_this call revive_fnc_actionCarry}, """", 98, false, true, """", _cond];" \n
                         "" \n
                         "_cond = ""['help', _target] call revive_fnc_actionCondition"";" \n
                         "_action = [""revive"", ""actions"", ""help""] call core_fnc_getSetting;" \n
                         "_actionHelp = _unit addAction [format[_action, (name _unit)], {_this call revive_fnc_actionHelp}, """", 97, false, true, """", _cond];" \n
                         "" \n
                         "_cond = ""['load', _target] call revive_fnc_actionCondition"";" \n
                         "_action = [""revive"", ""actions"", ""load""] call core_fnc_getSetting;" \n
                         "_actionLoad = _unit addAction [format[_action, (name _unit)], {_this call revive_fnc_actionLoad}, """", 96, false, true, """", _cond];" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "inVeh">*/
                                class inVeh
                                {
                                        itemno = 55;
                                        priority = 10.000000;
                                        to="VehAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!( (vehicle _unit) isEqualTo _unit )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "noVeh">*/
                                class noVeh
                                {
                                        itemno = 22;
                                        priority = 10.000000;
                                        to="dummy";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"( (vehicle _unit) isEqualTo _unit )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "helpAnim">*/
                class helpAnim
                {
                        name = "helpAnim";
                        itemno = 19;
                        init = /*%FSM<STATEINIT""">*/"private _helper = _unit getVariable ""helper"";" \n
                         "" \n
                         "diag_log format [""FSM helpAnim block: %1 --- %2"", _unit, _helper];" \n
                         "" \n
                         "if ( _hepler isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healAnim block: player is helper"";" \n
                         "	player selectWeapon (primaryWeapon player);" \n
                         "	sleep 1;" \n
                         "	[player, ""AinvPknlMstpSlayWrflDnon_1""] call common_fnc_doAnim;" \n
                         "	reviveAnimDelay = time + 2;" \n
                         "	private _animEH = player addEventhandler [""AnimChanged"", {_this call revive_fnc_helpAnimEH} ];" \n
                         "	player setVariable [""helpAnimEH"", _animEH];" \n
                         "	private _offset = [0,0,0];" \n
                         "	private _dir = 0;" \n
                         "	private _relpos = player worldToModel position _unit;" \n
                         "	if ( (_relpos select 0) < 0) then {" \n
                         "		_offset=[-0.2,0.7,0];" \n
                         "		_dir=90" \n
                         "	} else{" \n
                         "		_offset=[0.2,0.7,0];" \n
                         "		_dir=270" \n
                         "	};" \n
                         "	_unit attachTo [player, _offset];" \n
                         "	_unit setDir _dir;" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healAnim block: player is wounded"";" \n
                         "" \n
                         "};" \n
                         "" \n
                         "" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "dead">*/
                                class dead
                                {
                                        itemno = 16;
                                        priority = 100.000000;
                                        to="helpCanceled";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(alive _unit) || (isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "aborded">*/
                                class aborded
                                {
                                        itemno = 43;
                                        priority = 1.000000;
                                        to="helpAborded";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private _helper = _unit getVariable ""helper"";" \n
                                         "( !(alive _helper) || ((_helper distance _unit) > 2) || (_helper getVariable ""agony"") || (_helper getVariable ""stopped"")  )" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "dummy">*/
                class dummy
                {
                        name = "dummy";
                        itemno = 21;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "inTheAir">*/
                                class inTheAir
                                {
                                        itemno = 66;
                                        priority = 2.000000;
                                        to="giveChute";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private _pos = getPos _unit;" \n
                                         "private ""_alt"";" \n
                                         "if ( surfaceIsWater [_pos select 0, _pos select 1] ) then {" \n
                                         "	_alt = (getPosASL _unit) select 2;" \n
                                         "} else {" \n
                                         "	_alt = (getPosATL _unit) select 2;" \n
                                         "};" \n
                                         "( _alt > 0.5 )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "onTheGround">*/
                                class onTheGround
                                {
                                        itemno = 68;
                                        priority = 1.000000;
                                        to="dummy_1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private _pos = getPos _unit;" \n
                                         "private ""_alt"";" \n
                                         "if ( surfaceIsWater [_pos select 0, _pos select 1] ) then {" \n
                                         "	_alt = (getPosASL _unit) select 2;" \n
                                         "} else {" \n
                                         "	_alt = (getPosATL _unit) select 2;" \n
                                         "};" \n
                                         "( _alt <= 0.5 )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "unloadAnim">*/
                class unloadAnim
                {
                        name = "unloadAnim";
                        itemno = 23;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM unloadAnim block: %1 --- %2"", _unit, _inVeh];" \n
                         "" \n
                         "_inVeh = objNull;" \n
                         "" \n
                         "if ( !CTXT_PLAYER ) exitWith {};" \n
                         "" \n
                         "private _veh = (vehicle _unit);" \n
                         "private _vName = format[""unload_%1"", (owner _unit)];" \n
                         "private _action = _veh getVariable _vName;" \n
                         "_veh removeAction _action;" \n
                         "_veh setVariable [_vName, nil];" \n
                         "" \n
                         "if ( player isEqualTo _unit ) exitWith {" \n
                         "	diag_log ""FSM unloadAnim block: player is wounded"";" \n
                         "	player setVariable[""inVeh"", objNull, true];" \n
                         "	//unAssignVehicle player;" \n
                         "	//player action [""eject"", (vehicle player)];" \n
                         "	moveOut player;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 30;
                                        priority = 0.000000;
                                        to="dummy";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "waitRespawn">*/
                class waitRespawn
                {
                        name = "waitRespawn";
                        itemno = 24;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM waitRespawn block: %1 --- %2"", _unit, time];"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "alive_again">*/
                                class alive_again
                                {
                                        itemno = 25;
                                        priority = 0.000000;
                                        to="setEntity";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"{ (_uid isEqualTo (getPlayerUID _x)) && (alive _x) } count (allPlayers - entities ""headless_Client_F"") > 0"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "exit">*/
                class exit
                {
                        name = "exit";
                        itemno = 27;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM exit block: uid: %1"", _uid];"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "setEntity">*/
                class setEntity
                {
                        name = "setEntity";
                        itemno = 28;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM setEntity block: %1 --- %2"", _unit, time];" \n
                         "" \n
                         "_unit = objNull;" \n
                         "" \n
                         "{" \n
                         "	if ( (getPlayerUID _x) isEqualTo _uid) exitWith { " \n
                         "		_unit = _x; " \n
                         "		_unit setCaptive false;" \n
                         "		_unit allowDamage true;" \n
                         "		_hasMoved = false;" \n
                         "		_hasShot = false;" \n
                         "	};" \n
                         "} foreach (allPlayers - (entities ""headless_Client_F""));" \n
                         "" \n
                         "" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "Not_found">*/
                                class Not_found
                                {
                                        itemno = 57;
                                        priority = 0.000000;
                                        to="exit";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "found">*/
                                class found
                                {
                                        itemno = 56;
                                        priority = 0.000000;
                                        to="healthy";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "healAborded">*/
                class healAborded
                {
                        name = "healAborded";
                        itemno = 29;
                        init = /*%FSM<STATEINIT""">*/"private _healer = _unit getVariable ""healer"";" \n
                         "" \n
                         "diag_log format [""FSM healAborded block: %1 --- %2"", _unit, _healer];" \n
                         "" \n
                         "if ( _healer isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healAborded block: player is healer"";" \n
                         "	player setVariable [""action"", objNull];" \n
                         "	player removeEventHandler [""AnimChanged"", player getVariable ""healAnimEH""];" \n
                         "	""Healing process has been interrupted"" call revive_fnc_dynamictext;" \n
                         "	detach player;" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healAborded block: player is wounded"";" \n
                         "	player setVariable [""healer"", ObjNull, true];" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         "" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 42;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "allowDamage">*/
                class allowDamage
                {
                        name = "allowDamage";
                        itemno = 31;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM allowDamage block - %1"", _unit];" \n
                         "" \n
                         "_hasMoved = true;" \n
                         "" \n
                         "_unit allowDamage true;" \n
                         "" \n
                         "if ( _unit isEqualto player ) then {" \n
                         "	[player, ""agonyStop"", 2] call common_fnc_doGesture;" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 40;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "carryAnim">*/
                class carryAnim
                {
                        name = "carryAnim";
                        itemno = 33;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "private _carrier = _unit getVariable ""carrier"";" \n
                         "private _limit = time + 16;" \n
                         "" \n
                         "diag_log format [""FSM carryAnim block: %1 --- %2"", _unit, _carrier];" \n
                         "" \n
                         "if ( _carrier isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM carryAnim block: player is carrier"";" \n
                         "	_preAnim = animationState player;" \n
                         "	[player, ""grabCarry""] call common_fnc_doGesture;" \n
                         "" \n
                         "	waitUntil {" \n
                         "		( !(alive _unit) || !(alive player) || (player getVariable [""agony"", false]) || (time > _limit) )" \n
                         "	};" \n
                         "" \n
                         "	if ( !(alive _unit) ) then {" \n
                         "		[player, ""amovpknlmstpsraswrfldnon"", 2] call common_fnc_doAnim;" \n
                         "	};" \n
                         "	if ( (alive _unit) && (alive player) && !(player getVariable [""agony"", false]) ) then {" \n
                         "		_unit attachTo [player, [0.4, -0.1, -1.25]];" \n
                         "		[_unit, 195] call common_fnc_setDir;" \n
                         "		private _action = [""revive"", ""actions"", ""drop""] call core_fnc_getSetting;" \n
                         "		_actionDrop = player addAction [format[_action, (name _unit)], {_this call revive_fnc_actionDrop}, _unit, 0, false, true];" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM carryAnim block: player is wounded"";" \n
                         "	player setPos (_carrier ModelToWorld [0,1.9,0]);" \n
                         "	[player, ""grabCarried"", 1] call common_fnc_doGesture;" \n
                         "" \n
                         "	waitUntil {" \n
                         "		( !(alive player) || !(alive _carrier) || (_carrier getVariable [""agony"", false]) || (time > _limit) )" \n
                         "	};" \n
                         "" \n
                         "	if ( (alive player) && ( !(alive _carrier) || (_carrier getVariable [""agony"", false]) ) ) then {" \n
                         "		[player, ""agonyStart"", 1] call common_fnc_doGesture;" \n
                         "	};" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "dead">*/
                                class dead
                                {
                                        itemno = 35;
                                        priority = 100.000000;
                                        to="carryCanceled";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(alive _unit) || (isNull _unit)"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "aborded">*/
                                class aborded
                                {
                                        itemno = 62;
                                        priority = 2.000000;
                                        to="carryFall";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private _carrier = _unit getVariable ""carrier"";" \n
                                         "( 	isNull(_carrier) || !(alive _carrier) || (_carrier getVariable [""agony"", false]) )" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "released">*/
                                class released
                                {
                                        itemno = 11;
                                        priority = 1.000000;
                                        to="releaseAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"( !(isNull(_unit getVariable [""droper"", objNull])) )/* && " \n
                                         "	({ !(alive (_unit getVariable _x)) } count [""dragger"", ""carrier""] == 0) &&" \n
                                         "	({ (_unit getVariable _x) getVariable [""agony"", false] } count [""dragger"", ""carrier""] == 0) )*/" \n
                                         ""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "releaseAnim">*/
                class releaseAnim
                {
                        name = "releaseAnim";
                        itemno = 37;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "private _droper = _unit getVariable ""droper"";" \n
                         "private _isCarry = ( _droper isEqualTo (_unit getVariable [""carrier"", objNull]) );" \n
                         "private _isDrag = ( _droper isEqualTo (_unit getVariable [""dragger"", objNull]) );" \n
                         "" \n
                         "diag_log format [""FSM releaseAnim block: %1 --- %2 | %3 --- %4"", _unit, _droper, _isCarry, _isDrag];" \n
                         "" \n
                         "_unit setVariable [""droper"", objNull];" \n
                         "_unit setVariable [""carrier"", objNull];" \n
                         "_unit setVariable [""dragger"", objNull];" \n
                         "" \n
                         "if !( CTXT_PLAYER ) exitWith {};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) then {" \n
                         "	diag_log ""FSM releaseAnim block: player is wounded"";" \n
                         "	if ( _isDrag ) then {" \n
                         "		terminate _dragAnimThread;" \n
                         "		if ( _hasMoved ) then {" \n
                         "			[player, ""AinjPpneMrunSnonWnonDb_release"", 2] call common_fnc_doAnim;" \n
                         "		} else {" \n
                         "			[player, ""die"", 1] call common_fnc_doGesture;" \n
                         "		};" \n
                         "		detach player;" \n
                         "	};" \n
                         "	if ( _isCarry ) then {" \n
                         "		terminate _carryAnimThread;" \n
                         "		if ( _hasMoved ) then {" \n
                         "			[player, ""AinjPfalMstpSnonWrflDnon_AmovPpneMstpSrasWrflDnon_injured"", 2] call common_fnc_doAnim;" \n
                         "			detach player;" \n
                         "		} else {" \n
                         "			//[player, ""agonyStart"", 1] call common_fnc_doGesture;" \n
                         "			[player, ""AinjPfalMstpSnonWrflDnon_carried_Down"", 2] call common_fnc_doAnim;	//5s" \n
                         "			5 spawn {" \n
                         "				sleep _this;" \n
                         "				[player, ""die"", 1] call common_fnc_doGesture;" \n
                         "				detach player;	" \n
                         "			};" \n
                         "		};" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "if ( _droper isEqualTo player ) then {" \n
                         "	diag_log ""FSM releaseAnim block: player is droper"";" \n
                         "	player setVariable [""action"", ["""", objNull]];" \n
                         "	player removeAction _actionDrop;" \n
                         "	_actionDrop = -1;" \n
                         "	if ( _isDrag ) then {" \n
                         "		[player, ""amovpknlmstpsraswrfldnon"", 2] call common_fnc_doAnim;" \n
                         "	};" \n
                         "	if ( _isCarry ) then {" \n
                         "		[player, ""AcinPercMrunSnonWnonDf_AmovPercMstpSnonWnonDnon"", 2] call common_fnc_doAnim;	" \n
                         "	};" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         "_unit spawn {" \n
                         "	_this setVariable [""droper"", objNull, true];" \n
                         "	_this setVariable [""carrier"", objNull, true];" \n
                         "	_this setVariable [""dragger"", objNull, true];" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 38;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "LandAnim">*/
                class LandAnim
                {
                        name = "LandAnim";
                        itemno = 39;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM landAnim block: %1"", _unit];" \n
                         "" \n
                         "if !( player isEqualTo _unit ) exitWith {};" \n
                         "" \n
                         "diag_log ""FSM landAnim block: player is wounded"";" \n
                         "" \n
                         "(player getVariable [""action"", ["""", objNull]]) params [""_action"", ""_wounded""];" \n
                         "private _animtime = 0;" \n
                         "" \n
                         "//carry to agony" \n
                         "if ( _action isEqualTo ""carry"" ) then {" \n
                         "	private _curAnim = animationState player;" \n
                         "	if ( _curAnim isEqualTo ""AcinPercMstpSnonDnon"" ) then {" \n
                         "		[player, ""AcinPercMstpSnonWnonDnon_agony"", 2] call common_fnc_doAnim;" \n
                         "		_animTime = 4.761;" \n
                         "	};" \n
                         "	if ( _curAnim isEqualTo ""AcinPercMstpSrasWrflDnon"" ) then {" \n
                         "		[player, ""AcinPercMstpSrasWrflDnon_agony"", 2] call common_fnc_doAnim;" \n
                         "		_animTime = 4.761;" \n
                         "	};" \n
                         "	if ( _curAnim isEqualTo ""AcinPercMstpSnonWpstDnon"" ) then {" \n
                         "		[player, ""AcinPercMstpSnonWpstDnon_agony"", 2] call common_fnc_doAnim;" \n
                         "		_animTime = 4.761;" \n
                         "	};" \n
                         "	if ( _animTime isEqualTo 0 ) then {" \n
                         "		private _anims = [""Db"", ""Dbl"", ""Dbr"", ""Df"", ""Dfl"", ""Dfr"", ""Dl"", ""Dr""];" \n
                         "		{" \n
                         "			if ( _curAnim isEqualto format[""AcinPercMrunSnonWnon%1"", _x] ) exitWith {" \n
                         "				[player, ""AcinPercMrunSnonWnonDf_agony"", 2] call common_fnc_doAnim;" \n
                         "				_animTime = 4.545;" \n
                         "			};					" \n
                         "			if ( _curAnim isEqualto format[""AcinPercMrunSrasWrfl%1"", _x] ) exitWith {" \n
                         "				[player, ""AcinPercMrunSrasWrflDf_agony"", 2] call common_fnc_doAnim;" \n
                         "				_animTime = 4.545;" \n
                         "			};" \n
                         "			if ( _curAnim isEqualto format[""AcinPercMrunSnonWpst%1"", _x] ) exitWith {" \n
                         "				[player, ""AcinPercMrunSnonWnonDf_agony"", 2] call common_fnc_doAnim;" \n
                         "				_animTime = 4.545;" \n
                         "			};" \n
                         "		} forEach _anims;" \n
                         "	};	" \n
                         "	_lockTime = 0.2 + _animTime;" \n
                         "};" \n
                         "//drag to agony" \n
                         "if ( _action isEqualTo ""drag"" ) then {" \n
                         "	private _curAnim = animationState player;" \n
                         "	if ( _curAnim isEqualTo ""AcinPknlMstpSnonWnonDnon"" ) then {" \n
                         "		[player, ""AcinPknlMwlkSnonWnonDb_death"", 2] call common_fnc_doAnim;" \n
                         "		_animTime = 1;" \n
                         "	};" \n
                         "	if ( _curAnim isEqualTo ""AcinPknlMstpSrasWrflDnon"" ) then {" \n
                         "		[player, ""AcinPknlMwlkSlowWrflDb_death"", 2] call common_fnc_doAnim;" \n
                         "		_animTime = 1;" \n
                         "	};" \n
                         "	if ( _curanim isEqualTo ""AcinPknlMstpSnonWpstDnon"" ) then {" \n
                         "		[player, ""AcinPknlMwlkSnonWpstDb_death"", 2] call common_fnc_doAnim;" \n
                         "		_animTime = 1;								" \n
                         "	};" \n
                         "	if ( _curAnim isEqualTo ""AcinPknlMwlkSnonWnonDb"" ) then {" \n
                         "		[player, ""AcinPknlMwlkSnonWnonDb_death"", 2] call common_fnc_doAnim;" \n
                         "		_animTime = 1;" \n
                         "	};" \n
                         "	if ( _curAnim isEqualTo ""AcinPknlMwlkSrasWrflDb"" ) then {" \n
                         "		[player, ""AcinPknlMwlkSlowWrflDb_death"", 2] call common_fnc_doAnim;" \n
                         "		_animTime = 1;" \n
                         "	};" \n
                         "	_lockTime = 0.2 + _animTime;" \n
                         "};" \n
                         "" \n
                         "_animTime spawn {" \n
                         "	sleep _this;" \n
                         "	[player, ""die"", 2] call common_fnc_doGesture;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 40;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "HealFinish">*/
                class HealFinish
                {
                        name = "HealFinish";
                        itemno = 41;
                        init = /*%FSM<STATEINIT""">*/"private _healer = _unit getVariable ""healer"";" \n
                         "private _medEvac = _unit getVariable [""medEvac"", objNull];" \n
                         "" \n
                         "diag_log format [""FSM healFinish block: %1 --- %2 --- %3"", _unit, _healer, _medEvac];" \n
                         "" \n
                         "_unit call revive_fnc_stopUnitBleeding;" \n
                         "_unit setCaptive false;" \n
                         "_unit allowDamage true;" \n
                         "_hasMoved = false;" \n
                         "_hasShot = false;" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healFinish block: player is wounded"";" \n
                         "	[player] call revive_fnc_stopBleeding;" \n
                         "	player setVariable [""agony"", false, true];" \n
                         "	player setVariable [""hasMoved"", false, true];" \n
                         "	player setVariable [""hasShot"", false, true];" \n
                         "	(findDisplay 46) displayRemoveEventHandler [""keyDown"", reviveKeyEH];" \n
                         "	player removeEventHandler [""FiredMan"", reviveShotEH];" \n
                         "	if ( player getVariable [""leader"", false] ) then {" \n
                         "		(group player) selectLeader player;" \n
                         "		private _msg = [""revive"", ""agony"", ""leadMsg""] call core_fnc_getSetting;" \n
                         "		[_leadMode, format[_msg, (name player)], ""HQ""] call global_fnc_chat;" \n
                         "	};" \n
                         "	player setVariable [""tf_unable_to_use_radio"", false];" \n
                         "	detach player;" \n
                         "	[player, ""agonyStop"", 1] call common_fnc_doGesture;" \n
                         "	showHud true; " \n
                         "};" \n
                         "" \n
                         "if ( !CTXT_PLAYER )  exitWith {};" \n
                         "" \n
                         "_unit removeAction _actionHeal;" \n
                         "_unit removeAction _actionVehHEal;" \n
                         "_unit removeAction _actionDrag;" \n
                         "_unit removeAction _actionCarry;" \n
                         "_unit removeAction _actionDrop;" \n
                         "_unit removeAction _actionHelp;" \n
                         "_unit removeAction _actionLoad;" \n
                         "_actionHeal = -1;" \n
                         "_actionVehHeal = -1;" \n
                         "_actionDrag = -1;" \n
                         "_actionCarry = -1;" \n
                         "_actionDrop = -1;" \n
                         "_actionHelp = -1;" \n
                         "_actionLoad = -1;" \n
                         "" \n
                         "if ( _healer isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healFinish block: player is healer"";" \n
                         "	[player, ""medicStop""] call common_fnc_doGesture;" \n
                         "	player setVariable [""action"", []];" \n
                         "	_unit setVariable [""healer"", objNull, true];" \n
                         "	_unit setVariable [""medEvac"", objNull, true];" \n
                         "	if ( isNull _medEvac ) then { " \n
                         "		_unit call revive_fnc_removeFaks; " \n
                         "	} else {" \n
                         "		_medEvac = objNull;" \n
                         "		_unit setVariable [""medEvac"", objNull, true];" \n
                         "	};" \n
                         "	reviveScore = [player, 1];" \n
                         "	publicVariableServer ""reviveScore"";" \n
                         "	detach player;	" \n
                         "};" \n
                         "" \n
                         "" \n
                         "" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 1;
                                        priority = 0.000000;
                                        to="healthy";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "helpAborded">*/
                class helpAborded
                {
                        name = "helpAborded";
                        itemno = 44;
                        init = /*%FSM<STATEINIT""">*/"private _helper = _unit getVariable ""helper"";" \n
                         "" \n
                         "diag_log format [""FSM helpAborded block: %1 --- %2"", _unit, _helper];" \n
                         "" \n
                         "if ( _helper isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM helpAborded block: player is helper"";" \n
                         "	player setVariable [""action"", objNull];" \n
                         "	player removeEventHandler [""AnimChanged"", player getVariable ""helpAnimEH""];" \n
                         "	detach player;" \n
                         "	[player, ""AinvPknlMstpSlayWrflDnon_AmovPknlMstpSrasWrflDnon""] call common_fnc_doAnim;" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM helpAborded block: player is wounded"";" \n
                         "	player setVariable [""helper"", ObjNull, true];" \n
                         "	detach player;" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 45;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "healCanceled">*/
                class healCanceled
                {
                        name = "healCanceled";
                        itemno = 46;
                        init = /*%FSM<STATEINIT""">*/"private _healer = _unit getVariable ""healer"";" \n
                         "" \n
                         "diag_log format [""FSM healCanceled block: %1 --- %2"", _unit, _healer];" \n
                         "" \n
                         "if ( _healer isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healCancled block: player is healer"";" \n
                         "	_medEvac = objNull;" \n
                         "	_unit setVariable [""medEvac"", objNull, true];" \n
                         "	player setVariable [""action"", []];" \n
                         "	player removeEventHandler [""AnimChanged"", (player getVariable ""healAnimEH"")];" \n
                         "	player setVariable [""healAnimEH"", nil];" \n
                         "	private _text = [""revive"", ""ripMessage""] call core_fnc_getSetting;" \n
                         "	format[_text, (name _unit)] call revive_fnc_dynamicText;" \n
                         "	//[player, ""medicStop""] call common_fnc_doGesture;" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM healCanceled block: player is wounded"";" \n
                         "	player setVariable [""healer"", objNull, true];" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 53;
                                        priority = 0.000000;
                                        to="died";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "helpCanceled">*/
                class helpCanceled
                {
                        name = "helpCanceled";
                        itemno = 47;
                        init = /*%FSM<STATEINIT""">*/"private _helper = _unit getVariable ""hepler"";" \n
                         "" \n
                         "diag_log format [""FSM heplCanceled block: %1 --- %2"", _unit, _helper];" \n
                         "" \n
                         "if ( _helper isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM helpCancled block: player is helper"";" \n
                         "	player setVariable [""action"", []];" \n
                         "	player removeEventHandler [""AnimChanged"", (player getVariable ""helpAnimEH"")];" \n
                         "	private _text = [""revive"", ""ripMessage""] call core_fnc_getSetting;" \n
                         "	format[_text, (name _unit)] call revive_fnc_dynamicText;" \n
                         "	[player, ""AinvPknlMstpSlayWrflDnon_AmovPknlMstpSrasWrflDnon""] call common_fnc_doAnim;" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM helpCanceled block: player is wounded"";" \n
                         "	player setVariable [""helper"", objNull, true];" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         "" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 53;
                                        priority = 0.000000;
                                        to="died";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "carryCanceled">*/
                class carryCanceled
                {
                        name = "carryCanceled";
                        itemno = 48;
                        init = /*%FSM<STATEINIT""">*/"private _carrier = _unit getVariable ""carrier"";" \n
                         "" \n
                         "diag_log format [""FSM carryCanceled block: %1 --- %2"", _unit, _carrier];" \n
                         "" \n
                         "if ( _carrier isEqualTo player ) exitWith {" \n
                         "	diag_log format [""FSM carryCancled block: player is carrier --- %1"", prevAnim];" \n
                         "	player setVariable [""action"", ["""", objNull]];" \n
                         "	private _text = [""revive"", ""ripMessage""] call core_fnc_getSetting;" \n
                         "	format[_text, (name _unit)] call revive_fnc_dynamicText;" \n
                         "	//[player, ""amovpknlmstpsraswrfldnon""] call common_fnc_doAnim;" \n
                         "	[player, _preAnim] call common_fnc_doAnim;" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM carryCanceled block: player is wounded"";" \n
                         "	player setVariable [""carrier"", objNull, true];" \n
                         "	terminate _carryAnimThread;" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 53;
                                        priority = 0.000000;
                                        to="died";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "dragCanceled">*/
                class dragCanceled
                {
                        name = "dragCanceled";
                        itemno = 49;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "private _dragger = _unit getVariable ""dragger"";" \n
                         "" \n
                         "diag_log format [""FSM dragCanceled block: %1 --- %2"", _unit, _drager];" \n
                         "" \n
                         "_unit setVariable [""dragger"", objNull];" \n
                         "" \n
                         "if ( _dragger isEqualTo player ) then {" \n
                         "	diag_log format[""FSM dragCanceled block: player is dragger --- %1"", _preAnim];" \n
                         "	player setVariable [""action"", ["""", objNull]];" \n
                         "	private _text = [""revive"", ""ripMessage""] call core_fnc_getSetting;" \n
                         "	format[_text, (name _unit)] call revive_fnc_dynamicText;" \n
                         "	//[player, ""amovpknlmstpsraswrfldnon""] call common_fnc_doAnim;" \n
                         "	[player, _preAnim] call common_fnc_doAnim;" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         "if ( _unit isEqualTo player ) then {" \n
                         "	diag_log ""FSM dragCanceled block: player is wounded"";" \n
                         "	terminate _dragAnimThread;" \n
                         "	detach player;" \n
                         "};" \n
                         "" \n
                         "_unit spawn {" \n
                         "	_this setVariable [""dragger"", objNull, true];" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 53;
                                        priority = 0.000000;
                                        to="died";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "VehAnim">*/
                class VehAnim
                {
                        name = "VehAnim";
                        itemno = 52;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "_inVeh = (vehicle _unit);" \n
                         "" \n
                         "diag_log format[""FSM vehAnim block: %1 --- %2"", _unit, _inVeh];" \n
                         "" \n
                         "if ( !CTXT_PLAYER ) exitWith {};" \n
                         "" \n
                         "if ( player isEqualTo _unit ) exitWith {" \n
                         "	diag_log ""FSM vehAnim block: player is wounded"";" \n
                         "	player setVariable[""inVeh"", _inVeh, true];" \n
                         "	[player, ""die"", 2] call common_fnc_doGesture;" \n
                         "};" \n
                         "" \n
                         "private _vName = format[""unload_%1"", (owner _unit)];" \n
                         "private _cond = ""['unload', _target] call revive_fnc_actionCondition"";" \n
                         "private _action = [""revive"", ""actions"", ""unload""] call core_fnc_getSetting;" \n
                         "private _unload = _inVeh addAction [format[_action, (name _unit)], {_this call revive_fnc_actionUnload}, _unit, 99, false, true, """", _cond];" \n
                         "_inVeh setVariable [_vName, _unload];"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 70;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "WaterAnim">*/
                class WaterAnim
                {
                        name = "WaterAnim";
                        itemno = 59;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM waterAnim block: %1"", _unit];" \n
                         "" \n
                         "if !( player isEqualTo _unit ) exitWith {};" \n
                         "" \n
                         "diag_log ""FSM waterAnim block: player is wounded"";" \n
                         "//TODO find a floating dead gesture, will it sink ?" \n
                         "_lockTime = 0.2;" \n
                         "[player, ""die"", 2] call common_fnc_doGesture;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 40;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "notCaptive">*/
                class notCaptive
                {
                        name = "notCaptive";
                        itemno = 61;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM notCaptive block - %1"", _unit];" \n
                         "" \n
                         "_hasShot = true;" \n
                         "" \n
                         "_unit setCaptive false;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 40;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "carryFall">*/
                class carryFall
                {
                        name = "carryFall";
                        itemno = 63;
                        init = /*%FSM<STATEINIT""">*/"diag_log format [""FSM carryFall block: %1 --- %2"", _unit, _carrier];" \n
                         "" \n
                         "if ( _unit isEqualTo player ) exitWith {" \n
                         "	diag_log ""FSM carryFall block: player is wounded"";" \n
                         "	player setVariable [""carrier"", ObjNull, true];" \n
                         "	disableUserInput true;" \n
                         "	if ( _hasMoved ) then {" \n
                         "		[player, ""AinjPfalMstpSnonWrflDnon_AmovPpneMstpSrasWrflDnon_injured"", 2] call common_fnc_doAnim;" \n
                         "		_lockTime = 5;" \n
                         "	} else {" \n
                         "		//[player, ""agonyStart"", 1] call common_fnc_doGesture;" \n
                         "		[player, ""AinjPfalMstpSnonWrflDnon_carried_Down"", 2] call common_fnc_doAnim;" \n
                         "		_lockTime = 5;" \n
                         "	};" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 38;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "dragFall">*/
                class dragFall
                {
                        name = "dragFall";
                        itemno = 65;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "private _dragger = _unit getVariable [""dragger"", objNull];" \n
                         "" \n
                         "diag_log format [""FSM dragFall block: %1 --- %2"", _unit, _dragger];" \n
                         "" \n
                         "_unit setVariable [""dragger"", objNull];" \n
                         "" \n
                         "if ( _unit isEqualTo player ) then {" \n
                         "	diag_log ""FSM dragFall block: player is wounded"";" \n
                         "	player setVariable [""dragger"", ObjNull, true];" \n
                         "	terminate _dragAnimThread;" \n
                         "	disableUserInput true;" \n
                         "	[player, ""AinjPpneMrunSnonWnonDb_release"", 2] call common_fnc_doAnim; //1s" \n
                         "	_lockTime = 1.1;" \n
                         "	if ( _hasMoved ) then {" \n
                         "		_lockTime = 1.6;		" \n
                         "		[] spawn	{" \n
                         "			sleep 1.1;" \n
                         "			[player, ""AinjPpneMstpSnonWnonDnon_rolltofront"", 2] call common_fnc_doAnim; //0.5s" \n
                         "			sleep 0.5;" \n
                         "			detach player;" \n
                         "		};" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "_unit spawn {" \n
                         "	_this setVariable [""dragger"", objNull, true];" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "_">*/
                                class _
                                {
                                        itemno = 38;
                                        priority = 0.000000;
                                        to="agony";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "giveChute">*/
                class giveChute
                {
                        name = "giveChute";
                        itemno = 67;
                        init = /*%FSM<STATEINIT""">*/"" \n
                         "diag_log format[""FSM giveChute block: %1 --- %2"", _unit, time];" \n
                         "" \n
                         "if ( player isEqualTo _unit ) exitWith {" \n
                         "	diag_log ""FSM giveChute block: player is wounded"";" \n
                         "	/*" \n
                         "	private _chute = """" createVehicle (getPos player);" \n
                         "	[player, ""KIA_Para_Pilot"", 2] call common_fnc_doGesture;" \n
                         "	player attachTo [_chute, [0,0,0]];" \n
                         "	_chute spawn {" \n
                         "		waitUntil {" \n
                         "			(getPos player) params [""_x"", ""_y"", ""_z""];" \n
                         "			if ( surfaceIsWater [_x, _y] ) then {" \n
                         "				_alt = (getPosASL _unit) select 2;" \n
                         "			} else {" \n
                         "				_alt = (getPosATL _unit) select 2;" \n
                         "			};" \n
                         "			(_alt <= 1);" \n
                         "		};" \n
                         "		(getPos player) params [""_x"", ""_y"", ""_z""];" \n
                         "		detach player;" \n
                         "		_chute setPost [(_x + 0.5), (_y + 0.5), _z];" \n
                         "	};" \n
                         "	*/" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "onTheGround">*/
                                class onTheGround
                                {
                                        itemno = 68;
                                        priority = 1.000000;
                                        to="dummy_1";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"private _pos = getPos _unit;" \n
                                         "private ""_alt"";" \n
                                         "if ( surfaceIsWater [_pos select 0, _pos select 1] ) then {" \n
                                         "	_alt = (getPosASL _unit) select 2;" \n
                                         "} else {" \n
                                         "	_alt = (getPosATL _unit) select 2;" \n
                                         "};" \n
                                         "( _alt <= 0.5 )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "dummy_1">*/
                class dummy_1
                {
                        name = "dummy_1";
                        itemno = 69;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "inWater">*/
                                class inWater
                                {
                                        itemno = 58;
                                        priority = 12.000000;
                                        to="WaterAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/"if !( (vehicle _unit) isEqualTo _unit ) exitWith { false };" \n
                                         "getPos _unit params [""_x"", ""_y""];" \n
                                         "( surfaceIsWater [_x, _y] )"/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(getPos _unit) params [""_x"", ""_y""];" \n
                                         "( surfaceIsWater [_x, _y] )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "onLand">*/
                                class onLand
                                {
                                        itemno = 54;
                                        priority = 11.000000;
                                        to="LandAnim";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/"(vehicle _unit isEqualTo _unit)"/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(getPos _unit) params [""_x"", ""_y""];" \n
                                         "!( surfaceIsWater [_x, _y] )"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
        };
        initState="start";
        finalStates[] =
        {
                "exit",
        };
};
/*%FSM</COMPILE>*/